{Псевдокомментарии и комментарии - не удалять при сдаче программы!}
{$mode TP}
{$R+,B+,X-}
{$codepage UTF-8}                    /////  ЗАДАЧА 2 (30 очков)   /////
program task_2_var_2(input, output); /////  Вариант 2             /////
// -------------------------------------------------------------------
// Const  N = 15; Type vector = array [0..N] of integer;
// Описать процедуру SortNonZero(A), которая в массиве А типа vector 
// выстраивает все НЕНУЛЕВЫЕ элементы в порядке неубывания, 
// а НУЛЕВЫЕ элементы оставляет на своих местах.  
{
ПРИМЕР (внимание, индексы элементов начинаются ОТ НУЛЯ !!!).

ИСХОДНЫЙ массив A (индексы элементов указаны сверху – для наглядности):   
 0 | 1 | 2  | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 | 12 | 13 | 14 | 15 |
=======================================================================
14 | 0 | 23 | 7 | 19| 0 | 30| 5 | 3 | 0 | 0  | -8 |-10 | 0  |  5 | 15 |
=======================================================================

ПРЕОБРАЗОВАННЫЙ массив A (индексы при выводе массива печатать не надо):
 0 | 1 | 2  | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 | 12 | 13 | 14 | 15 |
=======================================================================
-10| 0 | -8 | 3 | 5 | 0 | 5 | 7 | 14| 0 | 0  | 15 | 19 | 0  | 23 | 30 |
=======================================================================
}
// ИДЕЯ РЕШЕНИЯ
// Этап 1 (10 очков). Переписать НЕНУЛЕВЫЕ элементы из массива А 
// в начало вспомогательного массива В.
// Этап 2 (10 очков). Отсортировать  заполненную часть массива В (любым 
// известным вам методом).
// Этап 3 (10 очков). Переписать отсортированные элементы из рабочей  
// части массива В на место ненулевых элементов массива А.  

// ТРЕБОВАНИЯ
// 1) Применить процедуру SortNonZero(A) для обработки конкретного
// массива по указанному выше правилу. ВНУТРИ процедуры SortNonZero(A)
// описать вспомогательную процедуру Sort(B,K) для сортировки начальной
// части массива В (с индексами от 0 до К) выбранным (по вашему 
// усмотрению) методом.
// 2) Дополнительно описать следующие процедуры:
// InArray(A) - для ввода элементов исходного массива;  
// OutArray(A,K) - для вывода элементов массива А с индексами от 0 до K.
// Параметр K в процедуре OutArray(A,K) полезен, если этой процедурой 
// пользоваться для промежуточной печати в процессе отладки основной
// процедуры SortNonZero(A). Например, рекомендуется вывести результат 
// заполнения рабочей части массива B ненулевыми элементами (для 
// контроля правильности работы этапа 1). Полезно также вывести
// результат сортировки рабочей части массива B с помощью Sort(B,K) (для 
// контроля правильности работы этапа 2). Наконец, эту же процедуру 
// вывода можно задействовать для печати окончательного ответа,  
// полученного (после этапа 3) в массиве A (в этом случае параметру K 
// будет соответствовать значение константы N, описанной в разделе const 
// основной программы). 

// ТЕСТЫ, НА КОТОРЫХ СДАВАТЬ ЗАДАЧУ, размещены в конце этой программы.

// ЕСЛИ НЕ ПОЛУЧАЕТСЯ СДАТЬ СРАЗУ ТРИ ЭТАПА, то можно сдавать этапами:
// 1) отдельно 1-ый этап (с выводом содержимого рабочей части массива B)
// 2) после сдачи 1-ого этапа можно сдать отдельно 2-ой этап (с выводом 
// отсортированной рабочей части массива B).
// 3) после этого останется отдельно сдать 3-ий этап (окончательный 
// вывод ответа (преобразованный массив A).
// ЗАМЕЧАНИЕ. При сдаче любого этапа ввод и вывод необходимо выполнять
// с использованием процедур InArray(A) и OutArray(A,K). Каждый этап
// должен быть оформлен как составная часть процедуры SortNonZero(A).

// ПРОСЬБА. Не злоупотреблять возможностью сдавать отдельными этапами, 
// СТАРАТЬСЯ всё-таки СДАВАТЬ СРАЗУ ВСЕ ТРИ ЭТАПА (в целях экономии 
// своего времени и времени проверяющих)
// --------------------------------------------------------------------

const 
    N = 15;
type
    vector = array[0..N] of integer;  {внимание, индексы от НУЛЯ !!!}
var
    A: vector;
    
{процедура InArray(A) для ввода элементов вектора A типа vector}
{здесь расположить её описание}
procedure InArray(var a:vector);
var
    i: integer;
begin
    for i := 0 to n do
        read(a[i]);
end;


{процедура OutArray(A,K) для вывода элементов вектора A типа vector}
{здесь расположить её описание}
procedure OutArray(var a:vector; k:integer);
var
    i: integer;
begin
    for i := 0 to k do
        write(a[i], '  ');
    writeln;
end;


{процедура SortNonZero(A) для преобразования вектора A типа vector}
{здесь расположить её описание, а также описание вспомогательной 
(вложенной) процедуры Sort(B,K) для сортировки начальной части массива B
с индексами от 0 до N}
procedure SortNonZero(var a:vector);
var
    i, k: integer;
    B: vector;


procedure Sort(var t: vector; g:integer);
var
    i, j, r: integer;
begin
    j := 0;
    repeat
        j := j + 1;
        for i := 0 to (g - j) do begin
            if t[i] > t[i+1] then begin
                r := t[i+1];
                t[i+1] := t[i];
                t[i] := r;
            end;
        end;
    until (j = g);
end;


begin
    k := 0;
    for i := 0 to n do begin
        if a[i] <> 0 then begin
            b[k] := a[i];
            k := k + 1;
        end;
    end;
    if k <> 0 then
        Sort(b, k-1);
    k := 0;
    for i := 0 to n do begin
        if a[i] <> 0 then begin
            a[i] := b[k];
            k := k + 1;
        end;
    end;
end;


begin 
    {Здесь ничего не менять и ничего от себя не добавлять!}
    writeln('============');
    writeln('task_2_var_2');
    writeln('============');
    writeln;
    writeln('Enter ', N+1, ' (N+1) numbers:');
    InArray(A);
    SortNonZero(A);
    writeln('Answer:');
    OutArray(A, N);
end.
{ТЕСТЫ, на которых надо сдавать эту задачу:

Test 1 (из условия задачи):
-------
ввод:
14  0  23  7  19  0  30  5  3  0  0  -8  -10  0  5  15
вывод:
-10  0 -8  3  5   0  5   7  14 0  0  15   19  0  23 30

Test 2:
-------
ввод:
0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0
вывод:
0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0

Test 3:
-------
ввод:
0  0  -1  -2  0  6  4  0  0  0  -9  0  0  5  0  0
вывод:
0  0  -9  -2  0 -1  4  0  0  0   5  0  0  6  0  0

Test 4:
-------
ввод:
15  14  13  12  11  10  9  8  7  6  5  4  3  2  1  0
вывод:
1  2  3  4  5  6  7  8  9  10  11  12  13  14  15  0

Test 5:
-------
ввод:
0  1  2  3  4  5  6  7  8  9  10  11  12  13  14  15
вывод:
0  1  2  3  4  5  6  7  8  9  10  11  12  13  14  15

}    
        





