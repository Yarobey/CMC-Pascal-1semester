{$mode TP}
{$R+,B+,X-}
{$codepage UTF-8}
// ---------------------------------------------------------------------
// ЗАДАЧА_3_вариант_3 (выход-6 от 04.11.2021)  /// 25 очков ///
// ---------------------------------------------------------------------
(*
type TF = file of integer;
---------------------------------------------------------------------
1 этап. Ввести с клавиатуры последовательность целых чисел (отличных
от нуля (конец последовательности - ноль). Записать все числа (кроме
нуля) в файл f типа TF (в том порядке, как они были введены). 
Этот этап уже реализован  в данной программе 
(ничего в него не надо добавлять !!!).
---------------------------------------------------------------------
2 этап (предстоит реализовать самостоятельно).
Проверить, больше ли  самое последнее число в получившемся файле  
всех предшествующих ему чисел? Напечатать на экране ответ: true/false
---------------------------------------------------------------------
Требование. Описать булевскую функцию greater(f), которая выполняет
соответствующую проверку (считать, что в файле НЕ МЕНЕЕ ДВУХ ЧИСЕЛ).
Решение дать строго ЗА ОДИН ПРОСМОТР ФАЙЛА f. 
Дополнительных массивов, файлов или множеств - НЕ ИСПОЛЬЗОВАТЬ.
*)
// ---------------------------------------------------------------------
// Сдавать задачу так: 
// 1) Скомпилировать эту программу (показать сообщение от компилятора
// о том, что сборка прошла успешно)
// 2) Выполнить трижды программу на заданных тестовых последовательностях 
// (четыре теста, на которых нужно сдавать эту программу, приведены в 
// конце, (после точки). Продемонстрировать результаты работы программы 
// на каждом из тестов.
// 3) Открыть окно редактора с текстом данной программы чтобы показать 
// как выглядит решение задачи (и, возможно, ответить на вопросы)
// ---------------------------------------------------------------------
// Примечание: размер шрифта (в окне редактора и окне вывода следует 
// УВЕЛИЧИТЬ, чтобы проверяющему всё было ВИДНО ХОРОШО.
// ---------------------------------------------------------------------

program task_3_var_3(f, input, output);
type
    TF = file of integer;
var 
    f: TF;
    x: integer;
    
// ---------------------------------------------------------------------

{здесь необходимо привести ваше описание булевской функции greater(f)}
function greater(var f: TF): boolean;
var
    max, curr: integer;
    ok: boolean;
begin
    reset(f);
    read(f, max);
    while not eof(f) do begin
        read(f, curr);
        if not eof(f) then
            if curr > max then
                max := curr;
    end;
    if curr <= max then
        ok := false
    else
        ok := true;
    greater := ok;
end;

//----------------------------------------------------------------------
    
begin
    {содержимое раздела операторов - не менять !!!}
    writeln('====================');
    writeln('Task_3_var_3 (count)');
    writeln('====================');
    writeln;
    assign(f, 'numbers.bin');  {нужно для Фри-Паскаля}
    {1 этап: формирование типизированного файла f типа TF}
    rewrite(f);
    {считываем с клавиатуры последовательность из не менее двух 
    целых чисел (конец последовательности - ноль) и переносим 
    эти числа в типизированный файл f}
    writeln('Please, enter at least two integer with "0" at the end');
    read(x);
    while x<>0 do begin
        write(f, x);
        read(x)
    end;
    writeln('all numbers saved in numbers.bin');
    writeln;
    {2 этап: работа с готовым файлом f типа TF}
    writeln('Checking numbers.bin:');
    write('last number is greater then all previous numbers? '); 
    writeln(greater(f)); 
    close(f);                 {нужно для Фри-Паскаля}        
end.
{
 
// -----------------тест 1 (ответ: true)----------------------------------
50 35 40 25 46 55 10 60 44 70 71 0
// -----------------тест 2 (ответ: false)---------------------------------
10 20 30 15 45 35 25 40 25 60 50 70 55 75 35 65 75 0
// -----------------тест 3 (ответ: false)---------------------------------
100 20 30 15 45 80 25 40 25 90 50 70 67 75 44 65 89 0
// -----------------тест 4 (false: )----------------------------------
50 35 40 25 46 55 10 60 44 70 71 71 0

}

        
